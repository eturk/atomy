use("core")
use("define")
use("array")

pairs = require("pairs")

require("actor")

Actor <- v := send(v)

macro(receive ~(body: Block)):
  names [e]:
    bs =
      `(~e when(make-pattern('~pat)) [~pat]: ~exp)
        for [pat, exp] in pairs from(body contents)

    `(Actor receive [~e]: ~*bs)

macro(receive ~(body: Block) after(~timeout) ~(action: Block)):
  names [e]:
    bs =
      `(~e when(make-pattern('~pat)) [~pat]: ~exp)
        for [pat, exp] in pairs from(body contents)

    `(Actor receive [~e]:
        ~*bs
        ~e after(~timeout) ~action)


me := Actor current

spawn &action := Actor spawn &action

spawn-link &action := Actor spawn-link &action
