use("atomy")

require("rubygems")
require("benchmark/ips")

Fixnum open:
  fib-cond :=
    if(self == 0)
      then: 1
      else:
        if(self == 1)
          then: 1
          else: (- 2) fib-cond + (- 1) fib-cond

0 fib-atomy := 1
1 fib-atomy := 1
Fixnum fib-atomy := (- 2) fib-atomy + (- 1) fib-atomy

--profiler = Rubinius Profiler Instrumenter new
--profiler start

Benchmark ips [x]:
  x report("20 fib-cond"):
    20 fib-cond

  x report("20 fib-atomy"):
    20 fib-atomy

--profiler stop
--profiler show

--puts("")
--puts(.fib-cond)
--puts(20 method(.fib-cond) executable decode)
--20 class atomy-methods[.fib-cond] each [b]:
  --unless(b name):
    --next

  --puts("")
  --puts(b name)
  --puts(20 method(b name) executable block-env compiled-code decode)

--puts("")
--puts(.fib-atomy)
--puts(20 method(.fib-atomy) executable decode)
--20 class atomy-methods[.fib-atomy] each [b]:
  --unless(b name):
    --next

  --puts("")
  --puts(b name)
  --puts(20 method(b name) executable block-env compiled-code decode)
