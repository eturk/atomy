use("core")
use("define")
use("block")
use("therie")

describe("assignment"):
  describe("="):
    it("introduces a new local"):
      a = 0
      expect(a) to be(0)
      expect({ a = 1, a } call) to be(1)
      expect(a) to be(0)

  describe("=!"):
    it("overwrites an existing local"):
      a = 0
      expect(a) to be(0)
      expect({ a =! 1, a } call) to be(1)
      expect(a) to be(1)

    it("introduces a new local if not defined"):
      expect({ a =! 1, a } call) to be(1)
      expect { a } to raise(NameError)

describe("with-variables-of"):
  it("redirects instance variable access to the target"):
    InstanceVariableUser = class:
      initialize(@x) := nil
      get-x := @x

    with-variables-of(InstanceVariableUser new(42)):
      expect(@x) to be(42)

  it("redirects instance variable assignment to the target"):
    x = InstanceVariableUser new(42)
    with-variables-of(x):
      @x = 43

    expect(x get-x) to be(43)

  it("redirects class variable access to the target"):
    ClassVariableUser = class:
      @@x = 42
      get-x := @@x

    with-variables-of(ClassVariableUser new):
      expect(@@x) to be(42)

  it("redirects class variable assignment to the target"):
    with-variables-of(ClassVariableUser new):
      @@x = 43

    expect(ClassVariableUser new get-x) to be(43)

describe("onto"):
  it("replaces the receiver of private message sends"):
    expect(1 onto { inspect }) to be("1")
    expect(1 onto { inspect() }) to be("1")
    expect(1 onto { + 2 }) to be(3)

    expect(1 onto { 3 inspect }) to be("3")
    expect(1 onto { 3 inspect() }) to be("3")
    expect(1 onto { 3 + 2 }) to be(5)

  it("treats 'self' as the original 'self'"):
    OntoWithSelf = class:
      go := 1 onto: [self, + 2]

    x = OntoWithSelf new
    expect(x go) to be([x, 3])

  it("treats instance variables as belonging to the original 'self'"):
    OntoWithInstanceVariable = class:
      initialize(@x) := nil
      go := 1 onto: @x
      set := 1 onto: @x = 43

    x = OntoWithInstanceVariable new(42)
    expect(x go) to be(42)
    x set
    expect(x go) to be(43)

  it("treats class variables as belonging to the original 'self'"):
    OntoWithClassVariable = class:
      @@foo = 42
      go := 1 onto: @@foo
      set := 1 onto: @@foo = 43

    x = OntoWithClassVariable new
    expect(x go) to be(42)
    x set
    expect(x go) to be(43)
